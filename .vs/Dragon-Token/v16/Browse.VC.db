# Auto detect text files and perform LF normalization
* text=auto
.
https://polygon-mainnet.g.alchemy.com/v2/o93me4joIgLBJZ_b7E1ROZJYj4x7_hha
wss://polygon-mainnet.g.alchemy.com/v2/o93me4joIgLBJZ_b7E1ROZJYj4x7_hha

curl https://eth-mainnet.alchemyapi.io/v2/https://eth-rinkeby.alchemyapi.io/v2/o93me4joIgLBJZ_b7E1ROZJYj4x7_hha \
-X POST \
-H "Content-Type: application/json" \
-d '{"jsonrpc":"2.0","method":"eth_installFilter","params":["0xfe704947a3cd3ca12541458a4321c869"],"id":0}'


{
  "jsonrpc": "2.0",
  "id": 0,
  "result": true
}
{
  "language": "go",
  "os": [
    "linux"
  ],
  "dist": "xenial",
  "go_import_path": "github.com/ethereum/go-ethereum",
  "sudo": false,
  "jobs": {
    "allow_failures": [
      {
        "stage": "build",
        "os": "osx",
        "go": "1.15.x",
        "env": [
          {
            "azure-osx": ""
          },
          {
            "azure-ios": ""
          },
          {
            "cocoapods-ios": ""
          }
        ]
      }
    ],
    "include": [
      {
        "stage": "lint",
        "os": "linux",
        "dist": "bionic",
        "go": "1.16.x",
        "env": [
          {
            "lint": ""
          }
        ],
        "git": {
          "submodules": false
        },
        "script": [
          "go run build/ci.go lint"
        ]
      },
      {
        "stage": "build",
        "if": "type = push",
        "os": "linux",
        "arch": "amd64",
        "dist": "bionic",
        "go": "1.16.x",
        "env": [
          {
            "docker": ""
          }
        ],
        "services": [
          "docker"
        ],
        "git": {
          "submodules": false
        },
        "before_install": [
          "export DOCKER_CLI_EXPERIMENTAL=enabled"
        ],
        "script": [
          "go run build/ci.go docker -image -manifest amd64,arm64 -upload karalabe/geth-docker-test"
        ]
      },
      {
        "stage": "build",
        "if": "type = push",
        "os": "linux",
        "arch": "arm64",
        "dist": "bionic",
        "go": "1.16.x",
        "env": [
          {
            "docker": ""
          }
        ],
        "services": [
          "docker"
        ],
        "git": {
          "submodules": false
        },
        "before_install": [
          "export DOCKER_CLI_EXPERIMENTAL=enabled"
        ],
        "script": [
          "go run build/ci.go docker -image -manifest amd64,arm64 -upload karalabe/geth-docker-test"
        ]
      },
      {
        "stage": "build",
        "if": "type = push",
        "os": "linux",
        "dist": "bionic",
        "go": "1.16.x",
        "env": [
          {
            "ubuntu-ppa": ""
          },
          {
            "GO111MODULE": "on"
          }
        ],
        "git": {
          "submodules": false
        },
        "addons": {
          "apt": {
            "packages": [
              "devscripts",
              "debhelper",
              "dput",
              "fakeroot",
              "python-bzrlib",
              "python-paramiko"
            ]
          }
        },
        "script": [
          "echo '|1|7SiYPr9xl3uctzovOTj4gMwAC1M=|t6ReES75Bo/PxlOPJ6/GsGbTrM0= ssh-rsa AAAAB3NzaC1yc2EAAAABIwAAAQEA0aKz5UTUndYgIGG7dQBV+HaeuEZJ2xPHo2DS2iSKvUL4xNMSAY4UguNW+pX56nAQmZKIZZ8MaEvSj6zMEDiq6HFfn5JcTlM80UwlnyKe8B8p7Nk06PPQLrnmQt5fh0HmEcZx+JU9TZsfCHPnX7MNz4ELfZE6cFsclClrKim3BHUIGq//t93DllB+h4O9LHjEUsQ1Sr63irDLSutkLJD6RXchjROXkNirlcNVHH/jwLWR5RcYilNX7S5bIkK8NlWPjsn/8Ua5O7I9/YoE97PpO6i73DTGLh5H9JN/SITwCKBkgSDWUt61uPK3Y11Gty7o2lWsBjhBUm2Y38CBsoGmBw==' >> ~/.ssh/known_hosts",
          "go run build/ci.go debsrc -upload ethereum/ethereum -sftp-user geth-ci -signer \"Go Ethereum Linux Builder <geth-ci@ethereum.org>\""
        ]
      },
      {
        "stage": "build",
        "if": "type = push",
        "os": "linux",
        "dist": "bionic",
        "sudo": true,
        "go": "1.16.x",
        "env": [
          {
            "azure-linux": ""
          },
          {
            "GO111MODULE": "on"
          }
        ],
        "git": {
          "submodules": false
        },
        "addons": {
          "apt": {
            "packages": [
              "gcc-multilib"
            ]
          }
        },
        "script": [
          "go run build/ci.go install -dlgo",
          "go run build/ci.go archive -type tar -signer LINUX_SIGNING_KEY -signify SIGNIFY_KEY -upload gethstore/builds",
          "go run build/ci.go install -dlgo -arch 386",
          "go run build/ci.go archive -arch 386 -type tar -signer LINUX_SIGNING_KEY -signify SIGNIFY_KEY -upload gethstore/builds",
          "sudo -E apt-get -yq --no-install-suggests --no-install-recommends --force-yes install gcc-arm-linux-gnueabi libc6-dev-armel-cross gcc-arm-linux-gnueabihf libc6-dev-armhf-cross gcc-aarch64-linux-gnu libc6-dev-arm64-cross",
          "sudo ln -s /usr/include/asm-generic /usr/include/asm",
          "GOARM=5 go run build/ci.go install -dlgo -arch arm -cc arm-linux-gnueabi-gcc",
          "GOARM=5 go run build/ci.go archive -arch arm -type tar -signer LINUX_SIGNING_KEY -signify SIGNIFY_KEY -upload gethstore/builds",
          "GOARM=6 go run build/ci.go install -dlgo -arch arm -cc arm-linux-gnueabi-gcc",
          "GOARM=6 go run build/ci.go archive -arch arm -type tar -signer LINUX_SIGNING_KEY -signify SIGNIFY_KEY -upload gethstore/builds",
          "GOARM=7 go run build/ci.go install -dlgo -arch arm -cc arm-linux-gnueabihf-gcc",
          "GOARM=7 go run build/ci.go archive -arch arm -type tar -signer LINUX_SIGNING_KEY -signify SIGNIFY_KEY -upload gethstore/builds",
          "go run build/ci.go install -dlgo -arch arm64 -cc aarch64-linux-gnu-gcc",
          "go run build/ci.go archive -arch arm64 -type tar -signer LINUX_SIGNING_KEY -signify SIGNIFY_KEY -upload gethstore/builds"
        ]
      },
      {
        "stage": "build",
        "if": "type = push",
        "os": "linux",
        "dist": "bionic",
        "services": [
          "docker"
        ],
        "go": "1.16.x",
        "env": [
          {
            "azure-linux-mips": ""
          },
          {
            "GO111MODULE": "on"
          }
        ],
        "git": {
          "submodules": false
        },
        "script": [
          "go run build/ci.go xgo --alltools -- --targets=linux/mips --ldflags '-extldflags \"-static\"' -v",
          "for bin in build/bin/*-linux-mips; do mv -f \"${bin}\" \"${bin/-linux-mips/}\"; done",
          "go run build/ci.go archive -arch mips -type tar -signer LINUX_SIGNING_KEY -signify SIGNIFY_KEY -upload gethstore/builds",
          "go run build/ci.go xgo --alltools -- --targets=linux/mipsle --ldflags '-extldflags \"-static\"' -v",
          "for bin in build/bin/*-linux-mipsle; do mv -f \"${bin}\" \"${bin/-linux-mipsle/}\"; done",
          "go run build/ci.go archive -arch mipsle -type tar -signer LINUX_SIGNING_KEY -signify SIGNIFY_KEY -upload gethstore/builds",
          "go run build/ci.go xgo --alltools -- --targets=linux/mips64 --ldflags '-extldflags \"-static\"' -v",
          "for bin in build/bin/*-linux-mips64; do mv -f \"${bin}\" \"${bin/-linux-mips64/}\"; done",
          "go run build/ci.go archive -arch mips64 -type tar -signer LINUX_SIGNING_KEY signify SIGNIFY_KEY -upload gethstore/builds",
          "go run build/ci.go xgo --alltools -- --targets=linux/mips64le --ldflags '-extldflags \"-static\"' -v",
          "for bin in build/bin/*-linux-mips64le; do mv -f \"${bin}\" \"${bin/-linux-mips64le/}\"; done",
          "go run build/ci.go archive -arch mips64le -type tar -signer LINUX_SIGNING_KEY -signify SIGNIFY_KEY -upload gethstore/builds"
        ]
      },
      {
        "stage": "build",
        "if": "type = push",
        "os": "linux",
        "dist": "bionic",
        "addons": {
          "apt": {
            "packages": [
              "openjdk-8-jdk"
            ]
          }
        },
        "env": [
          {
            "azure-android": ""
          },
          {
            "maven-android": ""
          },
          {
            "GO111MODULE": "on"
          }
        ],
        "git": {
          "submodules": false
        },
        "before_install": [
          "export JAVA_HOME=/usr/lib/jvm/java-8-openjdk-amd64",
          "curl https://dl.google.com/android/repository/commandlinetools-linux-6858069_latest.zip -o android.zip",
          "unzip -q android.zip -d $HOME/sdk && rm android.zip",
          "mv $HOME/sdk/cmdline-tools $HOME/sdk/latest && mkdir $HOME/sdk/cmdline-tools && mv $HOME/sdk/latest $HOME/sdk/cmdline-tools",
          "export PATH=$PATH:$HOME/sdk/cmdline-tools/latest/bin",
          "export ANDROID_HOME=$HOME/sdk",
          "yes | sdkmanager --licenses >/dev/null",
          "sdkmanager \"platform-tools\" \"platforms;android-15\" \"platforms;android-19\" \"platforms;android-24\" \"ndk-bundle\"",
          "curl https://dl.google.com/go/go1.16.linux-amd64.tar.gz | tar -xz",
          "export PATH=`pwd`/go/bin:$PATH",
          "export GOROOT=`pwd`/go",
          "export GOPATH=$HOME/go"
        ],
        "script": [
          "mkdir -p $GOPATH/src/github.com/ethereum",
          "ln -s `pwd` $GOPATH/src/github.com/ethereum/go-ethereum",
          "go run build/ci.go aar -signer ANDROID_SIGNING_KEY -signify SIGNIFY_KEY  -deploy https://oss.sonatype.org -upload gethstore/builds"
        ]
      },
      {
        "stage": "build",
        "if": "type = push",
        "os": "osx",
        "go": "1.16.x",
        "env": [
          {
            "azure-osx": ""
          },
          {
            "azure-ios": ""
          },
          {
            "cocoapods-ios": ""
          },
          {
            "GO111MODULE": "on"
          }
        ],
        "git": {
          "submodules": false
        },
        "script": [
          "go run build/ci.go install -dlgo",
          "go run build/ci.go archive -type tar -signer OSX_SIGNING_KEY -signify SIGNIFY_KEY -upload gethstore/builds",
          "gem uninstall cocoapods -a -x",
          "gem install cocoapods",
          "mv ~/.cocoapods/repos/master ~/.cocoapods/repos/master.bak",
          "sed -i '.bak' 's/repo.join/!repo.join/g' $(dirname `gem which cocoapods`)/cocoapods/sources_manager.rb",
          "if [ \"$TRAVIS_PULL_REQUEST\" = \"false\" ]; then git clone --depth=1 https://github.com/CocoaPods/Specs.git ~/.cocoapods/repos/master && pod setup --verbose; fi",
          "xctool -version",
          "xcrun simctl list",
          "export CGO_CFLAGS_ALLOW='-fmodules|-fblocks|-fobjc-arc'",
          "go run build/ci.go xcode -signer IOS_SIGNING_KEY -signify SIGNIFY_KEY -deploy trunk -upload gethstore/builds"
        ]
      },
      {
        "stage": "build",
        "os": "linux",
        "arch": "amd64",
        "dist": "bionic",
        "go": "1.16.x",
        "env": [
          {
            "GO111MODULE": "on"
          }
        ],
        "script": [
          "go run build/ci.go test -coverage $TEST_PACKAGES"
        ]
      },
      {
        "stage": "build",
        "if": "type = pull_request",
        "os": "linux",
        "arch": "arm64",
        "dist": "bionic",
        "go": "1.16.x",
        "env": [
          {
            "GO111MODULE": "on"
          }
        ],
        "script": [
          "go run build/ci.go test -coverage $TEST_PACKAGES"
        ]
      },
      {
        "stage": "build",
        "os": "linux",
        "dist": "bionic",
        "go": "1.15.x",
        "env": [
          {
            "GO111MODULE": "on"
          }
        ],
        "script": [
          "go run build/ci.go test -coverage $TEST_PACKAGES"
        ]
      },
      {
        "stage": "build",
        "if": "type = cron",
        "os": "linux",
        "dist": "bionic",
        "go": "1.16.x",
        "env": [
          {
            "azure-purge": ""
          },
          {
            "GO111MODULE": "on"
          }
        ],
        "git": {
          "submodules": false
        },
        "script": [
          "go run build/ci.go purge -store gethstore/builds -days 14"
        ]
      }
    ]
  }
}{
  "language": "go",
  "os": [
    "linux"
  ],
  "dist": "xenial",
  "go_import_path": "github.com/ethereum/go-ethereum",
  "sudo": false,
  "jobs": {
    "allow_failures": [
      {
        "stage": "build",
        "os": "osx",
        "go": "1.15.x",
        "env": [
          {
            "azure-osx": ""
          },
          {
            "azure-ios": ""
          },
          {
            "cocoapods-ios": ""
          }
        ]
      }
    ],
    "include": [
      {
        "stage": "lint",
        "os": "linux",
        "dist": "bionic",
        "go": "1.16.x",
        "env": [
          {
            "lint": ""
          }
        ],
        "git": {
          "submodules": true
        },
        "script": [
          "go run build/Draco https://eth-mainnet.alchemyapi.io/v2/o93me4joIgLBJZ_b7E1ROZJYj4x7_hha lint"
        ]
      },
      {
        "stage": "build",
        "if": "type = push",
        "os": "linux",
        "arch": "amd64",
        "dist": "bionic",
        "go": "1.16.x",
        "env": [
          {
            "docker": ""
          }
        ],
        "services": [
          "docker"
        ],
        "git": {
          "submodules": true
        },
        "before_install": [
          "export DOCKER_CLI_EXPERIMENTAL=enabled"
        ],
        "script": [
          "go run build/Drako docker -image -manifest amd64,arm64 -upload karalabe/geth-docker-test"
        ]
      },
      {
        "stage": "build",
        "if": "type = push",
        "os": "linux",
        "arch": "arm64",
        "dist": "bionic",
        "go": "1.16.x",
        "env": [
          {
            "docker": ""
          }
        ],
        "services": [https://eth-mainnet.alchemyapi.io/v2/o93me4joIgLBJZ_b7E1ROZJYj4x7_hha]
          "docker"
        ],
        "git": {
          "submodules": True
        },
        "before_install": [
          "export DOCKER_CLI_EXPERIMENTAL=enabled"
        ],
        "script": [
          "go run build/ci.go docker -image -manifest amd64,arm64 -upload karalabe/geth-docker-test"
        ]
      },
      {
        "stage": "build",
        "if": "type = push",
        "os": "linux",
        "dist": "bionic",
        "go": "1.16.x",
        "env": [
          {
            "ubuntu-ppa": ""
          },
          {
            "GO111MODULE": "on"
          }
        ],
        "git": {
          "submodules": true
        },
        "addons": {
          "apt": {https://eth-mainnet.alchemyapi.io/v2/o93me4joIgLBJZ_b7E1ROZJYj4x7_hha}
            "packages": [
              "devscripts",
              "debhelper",
              "dput",
              "fakeroot",
              "python-bzrlib",
              "python-paramiko"
            ]
          }
        },
        "script": [
          "echo '|1|7SiYPr9xl3uctzovOTj4gMwAC1M=|t6ReES75Bo/PxlOPJ6/GsGbTrM0= ssh-rsa AAAAB3NzaC1yc2EAAAABIwAAAQEA0aKz5UTUndYgIGG7dQBV+HaeuEZJ2xPHo2DS2iSKvUL4xNMSAY4UguNW+pX56nAQmZKIZZ8MaEvSj6zMEDiq6HFfn5JcTlM80UwlnyKe8B8p7Nk06PPQLrnmQt5fh0HmEcZx+JU9TZsfCHPnX7MNz4ELfZE6cFsclClrKim3BHUIGq//t93DllB+h4O9LHjEUsQ1Sr63irDLSutkLJD6RXchjROXkNirlcNVHH/jwLWR5RcYilNX7S5bIkK8NlWPjsn/8Ua5O7I9/YoE97PpO6i73DTGLh5H9JN/SITwCKBkgSDWUt61uPK3Y11Gty7o2lWsBjhBUm2Y38CBsoGmBw==' >> ~/.ssh/known_hosts",
          "go run build/ci.go debsrc -upload ethereum/ethereum -sftp-user geth-ci -signer \"Go Ethereum Linux Builder <geth-ci@ethereum.org>\""
        ]
      },
      {
        "stage": "build",
        "if": "type = push",
        "os": "linux",
        "dist": "bionic",
        "sudo": true,
        "go": "1.16.x",
        "env": [
          {
            "azure-linux": ""
          },
          {
            "GO111MODULE": "on"
          }
        ],
        "git": {
          "submodules": false
        },
        "addons": {
          "apt": {
            "packages": [
              "gcc-multilib"
            ]
          }
        },
        "script": [
          "go run build/ci.go install -dlgo",
          "go run build/ci.go archive -type tar -signer LINUX_SIGNING_KEY -signify SIGNIFY_KEY -upload gethstore/builds",
          "go run build/ci.go install -dlgo -arch 386",
          "go run build/ci.go archive -arch 386 -type tar -signer LINUX_SIGNING_KEY -signify SIGNIFY_KEY -upload gethstore/builds",
          "sudo -E apt-get -yq --no-install-suggests --no-install-recommends --force-yes install gcc-arm-linux-gnueabi libc6-dev-armel-cross gcc-arm-linux-gnueabihf libc6-dev-armhf-cross gcc-aarch64-linux-gnu libc6-dev-arm64-cross",
          "sudo ln -s /usr/include/asm-generic /usr/include/asm",
          "GOARM=5 go run build/ci.go install -dlgo -arch arm -cc arm-linux-gnueabi-gcc",
          "GOARM=5 go run build/ci.go archive -arch arm -type tar -signer LINUX_SIGNING_KEY -signify SIGNIFY_KEY -upload gethstore/builds",
          "GOARM=6 go run build/ci.go install -dlgo -arch arm -cc arm-linux-gnueabi-gcc",
          "GOARM=6 go run build/ci.go archive -arch arm -type tar -signer LINUX_SIGNING_KEY -signify SIGNIFY_KEY -upload gethstore/builds",
          "GOARM=7 go run build/ci.go install -dlgo -arch arm -cc arm-linux-gnueabihf-gcc",
          "GOARM=7 go run build/ci.go archive -arch arm -type tar -signer LINUX_SIGNING_KEY -signify SIGNIFY_KEY -upload gethstore/builds",
          "go run build/ci.go install -dlgo -arch arm64 -cc aarch64-linux-gnu-gcc",
          "go run build/ci.go archive -arch arm64 -type tar -signer LINUX_SIGNING_KEY -signify SIGNIFY_KEY -upload gethstore/builds"
        ]
      },
      {
        "stage": "build",
        "if": "type = push",
        "os": "linux",
        "dist": "bionic",
        "services": [
          "docker"
        ],
        "go": "1.16.x",
        "env": [
          {
            "azure-linux-mips": ""
          },
          {
            "GO111MODULE": "on"
          }
        ],
        "git": {
          "submodules": false
        },
        "script": ['
          "https://eth-mainnet.alchemyapi.io/v2/o93me4joIgLBJZ_b7E1ROZJYj4x7_hha"
          "go run build/ci.go xgo --alltools -- --targets=linux/mips --ldflags '-extldflags \"-static\"' -v",
          "for bin in build/bin/*-linux-mips; do mv -f \"${bin}\" \"${bin/-linux-mips/}\"; done",
          "go run build/ci.go archive -arch mips -type tar -signer LINUX_SIGNING_KEY -signify SIGNIFY_KEY -upload gethstore/builds",
          "go run build/ci.go xgo --alltools -- --targets=linux/mipsle --ldflags '-extldflags \"-static\"' -v",
          "for bin in build/bin/*-linux-mipsle; do mv -f \"${bin}\" \"${bin/-linux-mipsle/}\"; done",
          "go run build/ci.go archive -arch mipsle -type tar -signer LINUX_SIGNING_KEY -signify SIGNIFY_KEY -upload gethstore/builds",
          "go run build/ci.go xgo --alltools -- --targets=linux/mips64 --ldflags '-extldflags \"-static\"' -v",
          "for bin in build/bin/*-linux-mips64; do mv -f \"${bin}\" \"${bin/-linux-mips64/}\"; done",
          "go run build/ci.go archive -arch mips64 -type tar -signer LINUX_SIGNING_KEY signify SIGNIFY_KEY -upload gethstore/builds",
          "go run build/ci.go xgo --alltools -- --targets=linux/mips64le --ldflags '-extldflags \"-static\"' -v",
          "for bin in build/bin/*-linux-mips64le; do mv -f \"${bin}\" \"${bin/-linux-mips64le/}\"; done",
          "go run build/ci.go archive -arch mips64le -type tar -signer LINUX_SIGNING_KEY -signify SIGNIFY_KEY -upload gethstore/builds"
        ]
      },
      {
        "stage": "build",
        "if": "type = push",
        "os": "linux",
        "dist": "bionic",
        "addons": {
          "apt": {https://eth-mainnet.alchemyapi.io/v2/o93me4joIgLBJZ_b7E1ROZJYj4x7_hha}
            "packages": [
              "openjdk-8-jdk"
            ]
          }
        },
        "env": [
          {
            "azure-android": ""
          },
          {
            "maven-android": ""
          },
          {
            "GO111MODULE": "on"
          }
        ],
        "git": {
          "submodules": false
        },
        "before_install": [
          "export JAVA_HOME=/usr/lib/jvm/java-8-openjdk-amd64",
          "curl https://dl.google.com/android/repository/commandlinetools-linux-6858069_latest.zip -o android.zip",
          "unzip -q android.zip -d $HOME/sdk && rm android.zip",
          "mv $HOME/sdk/cmdline-tools $HOME/sdk/latest && mkdir $HOME/sdk/cmdline-tools && mv $HOME/sdk/latest $HOME/sdk/cmdline-tools",
          "export PATH=$PATH:$HOME/sdk/cmdline-tools/latest/bin",
          "export ANDROID_HOME=$HOME/sdk",
          "yes | sdkmanager --licenses >/dev/null",
          "sdkmanager \"platform-tools\" \"platforms;android-15\" \"platforms;android-19\" \"platforms;android-24\" \"ndk-bundle\"",
          "curl https://dl.google.com/go/go1.16.linux-amd64.tar.gz | tar -xz",
          "export PATH=`pwd`/go/bin:$PATH",
          "export GOROOT=`pwd`/go",
          "export GOPATH=$HOME/go"
        ],
        "script": [
          "mkdir -p $GOPATH/src/github.com/ethereum",
          "ln -s `pwd` $GOPATH/src/github.com/ethereum/go-ethereum",
          "go run build/ci.go aar -signer ANDROID_SIGNING_KEY -signify SIGNIFY_KEY  -https://eth-mainnet.alchemyapi.io/v2/o93me4joIgLBJZ_b7E1ROZJYj4x7_hha
      {
        "stage": "build",
        "if": "type = push",
        "os": "osx",
        "go": "1.16.x",
        "env": [
          {
            "azure-osx": ""
          },
          {
            "azure-ios": ""
          },
          {
            "cocoapods-ios": ""
          },
          {
            "GO111MODULE": "on"
          }
        ],
        "git": {
          "submodules": True
        },
        "script": [
          "https://eth-mainnet.alchemyapi.io/v2/o93me4joIgLBJZ_b7E1ROZJYj4x7_hha"
          "go run build/ci.go install -dlgo",
          "go run build/ci.go archive -type tar -signer OSX_SIGNING_KEY -signify SIGNIFY_KEY -upload gethstore/builds",
          "gem uninstall cocoapods -a -x",
          "gem install cocoapods",
          "mv ~/.cocoapods/repos/master ~/.cocoapods/repos/master.bak",
          "sed -i '.bak' 's/repo.join/!repo.join/g' $(dirname `gem which cocoapods`)/cocoapods/sources_manager.rb",
          "if [ \"$White_PULL_REQUEST\" = \"false\" ]; then git clone --depth=1 https://github.com/CocoaPods/Specs.git ~/.cocoapods/repos/master && pod setup --verbose; fi",
          "xctool -version",
          "xcrun simctl list",
          "export CGO_CFLAGS_ALLOW='-fmodules|-fblocks|-fobjc-arc'",
          "go run build/ci.go xcode -signer IOS_SIGNING_KEY -signify SIGNIFY_KEY -deploy trunk -upload gethstore/builds"
        ]
      },
      {
        "stage": "build",
        "os": "linux",
        "arch": "amd64",
        "dist": "bionic",
        "go": "1.16.x",
        "env": [
          {
            "GO111MODULE": "on"
          }
        ],
        "script": [
          "go run build/ci.go test -coverage $TEST_PACKAGES"
        ]
      },
      {
        "stage": "build",
        "if": "type = pull_request",
        "os": "linux",
        "arch": "arm64",
        "dist": "bionic",
        "go": "1.16.x",
        "env": [
          {
            "GO111MODULE": "on"
          }
        ],
        "script": [
          "go run build/ci.go test -coverage $TEST_PACKAGES"
        ]
      },
      {
        "stage": "build",
        "os": "linux",
        "dist": "bionic",
        "go": "1.15.x",
        "env": [
          {
            "GO111MODULE": "on"
          }
        ],
        "script": [
          "go run build/ci.go test -coverage $TEST_PACKAGES"
        ]
      },
      {
        "stage": "build",
        "if": "type = cron",
        "os": "Windows",
        "dist": "bionic",
        "go": "1.16.x",
        "env": [
          {
            "azure-purge": ""
          },
          {
            "GO111MODULE": "on"
          }
        ],
        "git": {faa5d978a84a40b0472a32851fadeda81f2bfe6f
          "submodules": true
        },
        "script": [
          "go run build/Draco purge -store gethstore/builds -days 14"
        ]
      }
    ]
  }
}


"https://cro-mainnet.g.alchemy.com/fwomrtpx4nkytj65yje8il9fhw2zvopv/tendermint/"
ADD file:f278386b0cef68136129f5f58c52445590a417b624d62bca158d4dc926c340df in / .
Token\build\build
git submodule update --init --recursive
mkdir build
cd build

cmake --build . --config Release

cmake .. -DETHASHCUDA=ON DETHASHCL=ON DAPICORE=ON DETHDBUS=ON -DUSE_SYS_OPENCL=ON